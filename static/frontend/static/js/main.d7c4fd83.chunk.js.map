{"version":3,"sources":["actionTypes.js","QuestionList.js","QuizDetail.js","QuizList.js","Home.js","Navbar.js","Alert.js","QuestionDetail.js","QuizResult.js","Signup.js","Login.js","PrivateRoute.js","Logout.js","App.js","store.js","index.js"],"names":["CHANGE_QUIZ","SET_TOKEN","UNSET_TOKEN","QuestionList","props","state","questions","quiz","className","this","map","question","to","id","body","React","Component","QuizDetail","quizID","match","params","undefined","error","handleSubmit","bind","fetch","process","then","response","json","setState","event","preventDefault","formData","FormData","append","method","headers","token","dispatch","type","quiz_instance","history","push","quizDetail","title","max_allowed_time","onSubmit","value","connect","quizInstance","TOKEN","withRouter","QuizList","quizList","toString","Home","authenticationLinks","Fragment","aria-current","Alert","children","console","log","QuestionDetail","selectedOption","explanation","nextQuestionID","correct","questionID","formHandler","handleChange","prevProps","currentQuestionID","requestBody","selected_option","JSON","stringify","ok","Error","statusText","data","catch","target","isQuestionLoading","style","marginTop","fontSize","nextButton","onClick","e","submitButtonValue","submitButtonClassName","options","option","index","name","onChange","checked","htmlFor","disabled","QUIZ_INSTANCE","pure","QuizResult","quizInstanceID","percentage","margin","Signup","username","email","password","password2","errors","Object","create","validationClasses","validationFeedback","message","handleInputChange","setErrors","resetErrors","prevState","usernameInvalid","hasOwnProperty","emailInvalid","passwordInvalid","password2Invalid","aria-describedby","Login","window","setTimeout","PrivateRoute","rest","render","location","Logout","status","App","path","initialState","persistedState","localStorage","getItem","parse","store","createStore","action","newState","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d7c4fd83.chunk.js","sourcesContent":["export const CHANGE_QUIZ = \"CHANGE_QUIZ\"\nexport const SET_TOKEN = \"SET_TOKEN\"\nexport const UNSET_TOKEN = \"UNSET_TOKEN\"","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass QuestionList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: props.quiz.questions\n        }\n    }\n\n    render() {\n        return (\n            <ul className=\"mt-3 list-inside list-disc\">\n                {this.state.questions.map(question => <li key={question.id}><Link to={`/questions/${question.id}/`} className=\"text-blue-500 underline hover:text-blue-700 text-xl\">{question.body}</Link></li>)}\n            </ul>\n        )\n    }\n}\n\nexport default QuestionList;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CHANGE_QUIZ } from \"./actionTypes\";\nimport QuestionList from \"./QuestionList\";\nimport { withRouter } from \"react-router-dom\";\n\nclass QuizDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.quizID = this.props.match.params.quizID\n\n        this.state = {\n            quiz: undefined,\n            error: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount() {\n        fetch(`${process.env.REACT_APP_API_URL}/quizzes/${this.quizID}/`)\n        .then(response => response.json())\n        .then(\n            (quiz) => {\n                this.setState({ quiz: quiz });\n            },\n            (error) => {\n                this.setState({ error: true });\n            }\n        );\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        let formData = new FormData();\n        formData.append(\"quiz\", this.quizID)\n        fetch(`${process.env.REACT_APP_API_URL}/quizinstances/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Token ${this.props.token}`,\n            },\n            body: formData\n        }).then(response => response.json()).then(json => {\n            this.props.dispatch({type: CHANGE_QUIZ, quiz_instance: json.id});\n            this.props.history.push(`/questions/${this.state.quiz.questions[0].id}`);\n        });\n    }\n    render() {\n        const quizDetail = this.state.quiz && (\n            <div>\n                <div className=\"p-5 bg-gray-200\">\n                <h1 className=\"font-semibold text-4xl\">{this.state.quiz.title}</h1>\n                <p className=\"text-gray-500\">Max Allowed Time: {this.state.quiz.max_allowed_time}</p>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"submit\" className=\"primary-button\" value=\"Start Quiz\" />\n                </form>\n            </div>\n                <div className=\"pr-5 pl-5\">\n                    <QuestionList quiz={this.state.quiz} />\n                </div>\n            </div>\n\n        )\n        return this.state.quiz === undefined ? \"\" : quizDetail;\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizInstance: state.quizInstance,\n        token: state.TOKEN\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(QuizDetail));","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass QuizList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quizList: []\n        };\n    }\n    componentDidMount() {\n        fetch(`${process.env.REACT_APP_API_URL}/quizzes/`).then(response => response.json()).then(quizList => this.setState({quizList: quizList}))\n    }\n    render(){\n        const quizList = this.state.quizList.map(quiz => <li key={quiz.id.toString()}><Link to={`quizzes/${quiz.id}`} className=\"text-blue-500 text-xl underline hover:text-blue-700\">{quiz.title}</Link></li>);\n\n        return (\n            <div className=\"p-3\">\n                <ul>\n                    {quizList}\n                </ul>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(QuizList);","import QuizList from \"./QuizList.js\";\n\nfunction Home() {\n    return (\n        <div>\n            <QuizList />\n        </div>\n\n    );\n}\n\nexport default Home;","import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\n\nfunction Navbar(props) {\n    const authenticationLinks = props.token ? (\n        <React.Fragment>\n            <li className=\"nav-item\">\n                <Link to=\"/accounts/logout\" className=\"pr-5 hover:font-bold\">Logout</Link>\n            </li>\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            <li className=\"nav-item\">\n                <Link to=\"/accounts/login\" className=\"pr-5 hover:font-bold\">Login</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"/accounts/signup\" className=\"pr-5 hover:font-bold\">Signup</Link>\n            </li>\n        </React.Fragment>\n    )\n    return (\n        <nav className=\"flex flex-row bg-black text-white p-4\">\n            <Link to=\"/\" className=\"text-xl\">Quiz</Link>\n            <ul className=\"flex flex-row ml-4 items-center\">\n                <li className=\"pr-5\">\n                    <Link to=\"/\" className=\"hover:font-bold\" aria-current=\"page\">Home</Link>\n                </li>\n                {authenticationLinks}\n            </ul>\n    </nav>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.TOKEN\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from \"react\";\n\nexport default function Alert({type, children}) {\n    console.log(type);\n    console.log(children);\n    let className = \"p-5 text-white font-bold text-xl rounded-sm\";\n    switch(type) {\n        case \"success\":\n            className += \" bg-green-500\";\n            break;\n        case \"warning\":\n            className += \" bg-yellow-500\";\n            break;\n        case \"danger\":\n            className += \" bg-red-500\";\n            break;\n        default:\n            break\n    }\n\n    return (\n        <div className={className}>\n            {children}\n        </div>\n    )\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Alert from \"./Alert\";\n\nclass QuestionDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: undefined,\n            selectedOption: undefined,\n            explanation: undefined,\n            nextQuestionID: undefined,\n            correct: undefined,\n            questionID: this.props.match.params.questionID\n        };\n        this.formHandler = this.formHandler.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount() {\n        fetch(`${process.env.REACT_APP_API_URL}/questions/${this.state.questionID}/`)\n        .then(response => response.json())\n        .then(question => this.setState({question: question}));\n    }\n    componentDidUpdate(prevProps) {\n        const currentQuestionID = this.props.match.params.questionID;\n        const previousQuestionID = prevProps.match.params.questionID\n        if (currentQuestionID !== previousQuestionID) {\n            fetch(`${process.env.REACT_APP_API_URL}/questions/${currentQuestionID}/`)\n            .then(response => response.json()).then(question => this.setState({question: question}));\n\n            this.setState({\n                selectedOption: undefined,\n                explanation: undefined,\n                nextQuestionID: undefined,\n                correct: undefined\n            })\n        }\n    }\n    formHandler(event) {\n        event.preventDefault();\n        const requestBody = {\n            question: this.state.question.id,\n            quiz_instance: this.props.quizInstance,\n            selected_option: this.state.selectedOption\n        };\n        fetch(`${process.env.REACT_APP_API_URL}/answers/`, {\n            'method': 'POST',\n            'headers': {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${this.props.token}`\n            },\n            body: JSON.stringify(requestBody)\n        }).then(response => {\n            if (!response.ok) {\n                throw Error(response.statusText)\n            }\n            return response.json();\n        }).then(data => {\n            this.setState({\n                explanation: data['explanation'],\n                nextQuestionID: data['next_question'],\n                correct: data['correct']\n            });\n        }).catch(error => console.log(\"Err!\", error))\n\n    }\n    handleChange(event) {\n        this.setState({selectedOption: event.target.value});\n    }\n    render() {\n        const question = this.state.question;\n        const isQuestionLoading = question === undefined;\n        const explanation = this.state.explanation ? (\n            <div style={{marginTop: \"3rem\", fontSize: \"32px\"}}>\n                <h3>Explanation</h3>\n                {this.state.explanation}\n            </div>\n        ) : \"\"\n        let nextButton = this.state.nextQuestionID ? (\n            <button className=\"primary-button\" onClick={e => {e.preventDefault(); this.props.history.push(`/questions/${this.state.nextQuestionID}`)}}>Next</button>\n        ) : undefined\n        if (this.state.question && this.state.nextQuestionID === null) {\n            nextButton = <button className=\"success-button\" onClick={e => {e.preventDefault(); this.props.history.push(`/result/${this.props.quizInstance}`)}}>Next</button>\n        }\n        let [submitButtonValue, submitButtonClassName] = [undefined, undefined];\n        switch (this.state.correct) {\n            case true:\n                [submitButtonValue, submitButtonClassName] = [\"Correct!\", \"success-button\"];\n                break;\n            case false:\n                [submitButtonValue, submitButtonClassName] = [\"Incorrect!\", \"failure-button\"];\n                break;\n            default:\n                [submitButtonValue, submitButtonClassName] = [\"Submit\", \"primary-button\"];\n                break;\n\n        }\n        if (!this.props.quizInstance) {\n            return (\n                <Alert type=\"danger\">No Quiz Instance Found! Go back to the quiz page and start it again.</Alert>\n            );\n        }\n\n        return isQuestionLoading ? \"Loading Question\" :(\n            <div className=\"p-5\">\n                <div>\n                    <p className=\"text-xl font-bold\">{this.state.question.body}</p>\n                    <form onSubmit={this.formHandler}>\n                        {\n                            this.state.question.options.map((option, index) => {\n                                return (\n                                    <div className=\"form-check mt-4\" key={`option${index}`}>\n                                        <input className=\"bg-white\" type=\"radio\" name=\"options\" onChange={this.handleChange} value={option.id} checked={this.state.selectedOption == option.id} id={`option_${index}`}/>\n                                        <label className=\"ml-2\" htmlFor={`option_${index}`}>{option.body}</label>\n                                    </div>\n                                );\n                            })\n                        }\n                        <input type=\"submit\" disabled={this.state.correct} className={submitButtonClassName} value={submitButtonValue} style={{marginTop: \"1rem\"}} />\n                    </form>\n                    {explanation}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizInstance: state.QUIZ_INSTANCE,\n        token: state.TOKEN\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, null, null, { pure: false })(QuestionDetail));\n","import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\n\nclass QuizResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quizInstanceID: this.props.match.params.quizInstanceID,\n            percentage: undefined\n        }\n    }\n    componentDidMount() {\n        fetch(`${process.env.REACT_APP_API_URL}/result/${this.state.quizInstanceID}/`).then(response => response.json()).then(data => {\n            this.setState({\n                percentage: data[\"result\"][\"grade_percentage\"]\n            });\n        }).then(error => console.log(\"Err\", error));\n    }\n    render() {\n        return (\n            <div style={{margin: \"auto\"}}>\n                <h2>Quiz Result</h2>\n                <div>\n                    {this.state.percentage}%\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps( state ) {\n    return { quizInstance: state.QUIZ_INSTANCE }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(QuizResult));","import React from \"react\";\nimport Alert from \"./Alert\";\n\nclass Signup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password2: \"\"\n            },\n            errors: Object.create(null),\n            validationClasses: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password2: \"\"\n            },\n            validationFeedback: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password2: \"\"\n            },\n            response: undefined\n        }\n        this.message = \"\";\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setErrors = this.setErrors.bind(this);\n        this.resetErrors = this.resetErrors.bind(this);\n\n    }\n    setErrors(json) {\n        this.setState((prevState) => {\n            const usernameInvalid = json.hasOwnProperty(\"username\");\n            const emailInvalid = json.hasOwnProperty(\"email\");\n            const passwordInvalid = json.hasOwnProperty(\"password\");\n            const password2Invalid = json.hasOwnProperty(\"password2\");\n            const message = json.hasOwnProperty(\"non_field_errors\");\n\n            return {\n                errors: json,\n                validationClasses: {\n                    username: usernameInvalid ? \"border-red-500\" : \"border-green-500\",\n                    email: emailInvalid ? \"border-red-500\" : \"border-green-500\",\n                    password: passwordInvalid ? \"border-red-500\" : \"border-green-500\",\n                    password2: password2Invalid ? \"border-red-500\" : \"border-green-500\",\n                },\n                validationFeedback: {\n                    username: usernameInvalid ? <div className=\"invalid-feedback\">{json[\"username\"]}</div> : \"\",\n                    email: emailInvalid ? <div className=\"invalid-feedback\">{json[\"email\"]}</div> : \"\",\n                    password: passwordInvalid ? <div className=\"invalid-feedback\">{json[\"password\"]}</div> : \"\",\n                    password2: password2Invalid ? <div className=\"invalid-feedback\">{json[\"password2\"]}</div> : \"\"\n                },\n                message: message ? <Alert type=\"danger\">{json[\"non_field_errors\"]}</Alert> : \"\"\n            };\n        });\n    }\n    resetErrors() {\n        this.setState({\n            errors: Object.create(null),\n            validationClasses: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password2: \"\"\n            },\n            validationFeedback: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password2: \"\"\n            },\n            message: undefined\n        })\n    }\n    handleInputChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState((prevState) => {\n            return {data: {...prevState.data, [name]: value}}\n        });\n    }\n    handleSubmit(event) {\n        fetch(`${process.env.REACT_APP_API_URL}/accounts/signup/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.data)\n        }).then(response => {\n            response.json().then((data) => {\n                if (!response.ok) {\n                    this.setErrors(data);\n                }\n                else {\n                    this.resetErrors();\n                    this.setState({\n                        message: <Alert type=\"success\">Account created successfully!</Alert>\n                    });\n                }\n            })\n        })\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className=\"p-5\">\n                <h1 className=\"font-semibold text-4xl mb-8\">Signup</h1>\n                {this.state.message}\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"username\" className=\"box-label\">Username</label>\n                        <input type=\"text\" onChange={this.handleInputChange} value={this.state.data.username}\n                               className={\"textbox \" + this.state.validationClasses.username}\n                               id=\"username\" name=\"username\"\n                        />\n                        {this.state.validationFeedback.username}\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"email\" className=\"box-label\">Email address</label>\n                        <input type=\"email\" onChange={this.handleInputChange} value={this.state.data.email}\n                               className={\"textbox \" + this.state.validationClasses.email} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\"\n                        />\n                        <div className=\"text-gray-600\">We'll never share your email with anyone else.</div>\n                        {this.state.validationFeedback.email}\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"password\" className=\"box-label\">Password</label>\n                        <input type=\"password\" onChange={this.handleInputChange} value={this.state.data.password}\n                               className={\"textbox \" + this.state.validationClasses.password} name=\"password\" id=\"password\"\n                        />\n                        {this.state.validationFeedback.password}\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"password2\" className=\"box-label\">Confirm Password</label>\n                        <input type=\"password\" onChange={this.handleInputChange} value={this.state.data.password2}\n                               className={\"textbox \" + this.state.validationClasses.password2} name=\"password2\" id=\"password2\"\n                        />\n                        {this.state.validationFeedback.password2}\n                    </div>\n                    <button type=\"submit\" className=\"primary-button\">Signup</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { SET_TOKEN } from \"./actionTypes\";\nimport Alert from \"./Alert\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                username: \"\",\n                password: \"\",\n            },\n            errors: Object.create(null),\n            validationClasses: {\n                username: \"\",\n                password: \"\",\n            },\n            validationFeedback: {\n                username: \"\",\n                password: \"\",\n            },\n            response: undefined\n        }\n        this.message = \"\";\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setErrors = this.setErrors.bind(this);\n        this.resetErrors = this.resetErrors.bind(this);\n\n    }\n    setErrors(json) {\n        this.setState((prevState) => {\n            const usernameInvalid = json.hasOwnProperty(\"username\");\n            const passwordInvalid = json.hasOwnProperty(\"password\");\n            const message = json.hasOwnProperty(\"non_field_errors\");\n\n            return {\n                errors: json,\n                validationClasses: {\n                    username: usernameInvalid ? \"border-red-500\" : \"border-green-500\",\n                    password: passwordInvalid ? \"border-red-500\" : \"border-green-500\",\n                },\n                validationFeedback: {\n                    username: usernameInvalid ? <div className=\"text-red-500 font-bold\">{json[\"username\"]}</div> : \"\",\n                    password: passwordInvalid ? <div className=\"text-red-500 font-bold\">{json[\"password\"]}</div> : \"\",\n                },\n                message: message ? <Alert type=\"danger\">{json[\"non_field_errors\"]}</Alert>: \"\"\n            };\n        });\n    }\n    resetErrors() {\n        this.setState({\n            errors: Object.create(null),\n            validationClasses: {\n                username: \"\",\n                password: \"\",\n            },\n            validationFeedback: {\n                username: \"\",\n                password: \"\",\n            },\n            message: undefined\n        })\n    }\n    handleInputChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState((prevState) => {\n            return {data: {...prevState.data, [name]: value}}\n        });\n    }\n    handleSubmit(event) {\n        fetch(`${process.env.REACT_APP_API_URL}/accounts/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.data)\n        }).then(response => {\n            response.json().then((data) => {\n                if (!response.ok) {\n                    this.setErrors(data);\n                }\n                else {\n                    this.resetErrors();\n                    this.setState({\n                        message: <Alert type=\"success\">Login Successfull! Redirecting to homepage in 5 seconds....</Alert>\n                    });\n                    this.props.dispatch({type: SET_TOKEN, token: data.token})\n                    window.setTimeout(() => this.props.history.push('/'), 5000)\n                }\n            })\n        })\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className=\"p-5\">\n                <h1 className=\"font-semibold text-4xl mb-8\">Login</h1>\n                {this.state.message}\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"mt-4\">\n                        <label htmlFor=\"username\" className=\"box-label\">Username</label>\n                        <input type=\"text\" onChange={this.handleInputChange} value={this.state.data.username}\n                                className={\"textbox \" + this.state.validationClasses.username}\n                                id=\"username\" name=\"username\"\n                        />\n                        {this.state.validationFeedback.username}\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"box-label\">Password</label>\n                        <input type=\"password\" onChange={this.handleInputChange} value={this.state.data.password}\n                                className={\"textbox \" + this.state.validationClasses.password} name=\"password\" id=\"password\"\n                        />\n                        {this.state.validationFeedback.password}\n                    </div>\n                    <button type=\"submit\" className=\"primary-button\">Login</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        token: state.TOKEN\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));","import { connect } from \"react-redux\";\nimport { withRouter, Route, Redirect } from \"react-router-dom\";\nimport React from \"react\";\n\nclass PrivateRoute extends React.Component {\n    render() {\n        const { children, ...rest } = this.props;\n        return (\n            <Route  {...rest}\n                    render={\n                        ({location}) => this.props.token ? children : <Redirect to=\"/accounts/login\" />\n                    }\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.TOKEN\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(PrivateRoute));\n","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { UNSET_TOKEN } from \"./actionTypes\";\n\nclass Logout extends React.Component {\n    render() {\n        fetch(`${process.env.REACT_APP_API_URL}/accounts/logout/`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Token ${this.props.token}`\n            }\n        }).then(response => {\n            // Either, the logout would succeed or the user's token is already invalid\n            // in both cases we would unset user's token\n            if (response.ok || response.status === 401) {\n                this.props.dispatch({type: UNSET_TOKEN})\n                return <Redirect to=\"/\"></Redirect>;\n            }\n        })\n        return <Redirect to=\"/\"></Redirect>;\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        token: state.TOKEN\n    }\n}\nexport default connect(mapStateToProps)(Logout);\n","import QuizDetail from \"./QuizDetail.js\";\nimport Home from \"./Home.js\";\nimport Navbar from \"./Navbar.js\";\nimport QuestionDetail from \"./QuestionDetail.js\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport QuizResult from \"./QuizResult.js\";\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport PrivateRoute from \"./PrivateRoute.js\";\nimport Logout from \"./Logout.js\";\n\nexport default function App() {\n  return (\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route path=\"/quizzes/:quizID\">\n            <QuizDetail />\n          </Route>\n          <PrivateRoute path=\"/questions/:questionID\">\n            <QuestionDetail />\n          </PrivateRoute>\n          <Route path=\"/result/:quizInstanceID\">\n            <QuizResult />\n          </Route>\n          <PrivateRoute path=\"/accounts/logout\">\n            <Logout />\n          </PrivateRoute>\n          <Route path=\"/accounts/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/accounts/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n","import { createStore } from \"redux\";\nimport { CHANGE_QUIZ, SET_TOKEN, UNSET_TOKEN } from \"./actionTypes\";\n\nvar initialState = {};\n\nfunction appStateUpdater(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_QUIZ:\n      return {\n        ...state, 'QUIZ_INSTANCE': action.quiz_instance\n      }\n    case SET_TOKEN:\n      return {\n        ...state, 'TOKEN': action.token\n      }\n    case UNSET_TOKEN:\n      const {TOKEN, ...newState} = state;\n      return newState;\n    default:\n      return state;\n  }\n}\nconst persistedState = localStorage.getItem(\"reduxStore\") ? JSON.parse(localStorage.getItem(\"reduxStore\")) : {}\nconst store = createStore(\n  appStateUpdater,\n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => localStorage.setItem(\"reduxStore\", JSON.stringify(store.getState())))\nexport default store;\n","import ReactDOM from 'react-dom';\nimport React from \"react\";\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}